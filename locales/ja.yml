---
main:
    lang_sample: 日本語
    language_flag: "\U0001F1EF\U0001F1F5"
    language_name: 日本語
strings:
    Admin:
        adminlist: <b>{admin}</b>の管理者：
        anon_admin:
            already_disabled: '{admin} で匿名管理者モードは既に<b>無効</b>になっています'
            already_enabled: '{admin} で匿名管理者モードは既に<b>有効</b>になっています'
            disabled: |-
                {admin} で匿名管理者モードが現在<b>無効</b>になっています。
                これにより、匿名管理者は権限を確認するためにボタンを押す必要があります。
            disabled_now: |-
                {admin} で匿名管理者モードが<b>無効</b>になりました。
                今後、匿名管理者からの権限確認を依頼しません。
            enabled: |-
                {admin} で匿名管理者モードが現在<b>有効</b>になっています。
                これにより、すべての匿名管理者が制限なく管理アクションを実行できます。
            enabled_now: |-
                {admin} で匿名管理者モードが<b>有効</b>になりました。
                今後、管理者には匿名管理者からの権限を確認するよう依頼します。
            invalid_arg: 無効な引数です。<code>on</code>、<code>off</code>、<code>yes</code>、<code>no</code>のみ理解します
        demote:
            is_admin: この人は管理者ではありません。どうやって降格できますか？
            is_bot_itself: 自分を降格させることはできません。私を昇格させた人を連れてきてください！
            is_owner: この人はこのチャットを作成した人です。どうやって降格できますか？
            success_demote: '{admin} を正常に降格させました！'
        errors:
            err_cannot_demote: 降格できませんでした。私が管理者でないか、管理者ステータスが他のユーザーによって任命されたため、アクションを実行できません！
            err_cannot_promote: 昇格できませんでした。私が管理者でないか、管理者ステータスが他のユーザーによって任命されたため、アクションを実行できません！
            err_set_title: カスタム管理者タイトルの設定に失敗しました。タイトル名が正しくないか、絵文字が含まれている可能性があります。
            title_empty: 設定できるように管理者タイトルを教えてください。
        help_msg: |-
            管理モジュール！

            *ユーザーコマンド:*
            × /adminlist: 現在のチャット内の管理者をリストし、ユーザーの昇格と降格を容易にします。

            *管理者コマンド:*
            × /promote `<返信/ユーザー名/メンション/ユーザーID>`: ユーザーを昇格させます。
            × /demote `<返信/ユーザー名/メンション/ユーザーID>`: ユーザーを降格させます。
            × /title `<返信/ユーザー名/メンション/ユーザーID>` `<カスタムタイトル>`: ユーザーのカスタムタイトルを設定します
        promote:
            admin_title_truncated: 管理者タイトルが {number} 文字から16文字に切り詰められました
            is_admin: この人は既に管理者です。どうやって昇格できますか？
            is_bot_itself: これを自分にできればいいのに ;_;
            is_owner: この人はこのチャットを作成した人です。どうやって昇格できますか？
            success_promote: '{admin} を正常に昇格させました！'
        title:
            is_admin: この人は既に管理者です。どうやってカスタム管理者タイトルを設定できますか？
            is_bot_itself: これを自分にできればいいのに ;_;
            is_owner: この人はこのチャットを作成した人です。どうやってカスタム管理者タイトルを設定できますか？
            success_set: '{first} の管理者タイトルを <b>{second}</b> に正常に設定しました'
    Antiflood:
        checkflood:
            perform_action: はい、あなたのスパムは好きではありません。{first} は {second} されました！
        errors:
            expected_args: '引数が必要です！off、または整数。例: `/setflood 5`、または `/setflood off`'
            invalid_int: それは有効な整数ではありません。有効な整数、または `off` を入力してください。
            set_in_limit: アンチスパム制限は 3 から 100 の間に設定する必要があります。
        flood:
            disabled: このチャットは現在スパム制御を実施していません。
            show_settings: このチャットは現在 {number} メッセージ後にスパム制御を実施しています。その量を超えるメッセージを送信するユーザーは {value} されます。
        flood_deleter:
            already_disabled: アンチスパムメッセージ削除は現在このチャットで*無効*です。アンチスパムを引き起こすメッセージは無視されます！
            already_enabled: アンチスパムメッセージ削除は現在このチャットで*有効*です。アンチスパムを引き起こすメッセージは削除されます！
            disabled: アンチスパムメッセージ削除をオフにしました。アンチスパムを引き起こすメッセージは無視されます！
            enabled: アンチスパムメッセージ削除をオンにしました。アンチスパムを引き起こすメッセージは削除されます！
            invalid_option: '`yes`/`no`/`on`/`off` のオプションのみ理解します'
        help_msg: |-
            人々が時々参加して100件のメッセージを送信し、チャットを台無しにすることがありますか？アンチスパムがあればもうそんなことはありません。

            アンチスパムを使用すると、複数のメッセージを連続で送信するユーザーに対してアクションを実行できます。アクション: ban/kick/mute/tban/tmute

            *管理者コマンド*:
            × /flood: 現在のスパム設定を取得します。
            × /setflood `<数値/off/no>`: ユーザーに対してアクションを実行するメッセージ数を設定します。'0'、'off'、または'no'に設定して無効にします。
            × /setfloodmode `<アクションタイプ>`: スパムを行ったユーザーに対して実行するアクションを選択します。オプション: ban/kick/mute/tban/tmute
            × /delflood `<yes/no/on/off>`: ユーザーがスパムしたメッセージを削除したい場合。
        setflood:
            disabled: |-
                了解。
                スパムについてユーザーに警告しません。
            success: 了解！最大スパム制限を <b>{number}</b> メッセージに設定しました。
        setfloodmode:
            specify_action: 'スパム時に実行するアクションを指定する必要があります。現在のモード: `ban`/`kick`/`mute`'
            success: 了解！スパムモードは {value} になります。
            unknown_type: 不明なタイプ '{value}' です。ban/kick/mute のいずれかを使用してください
    Approvals:
        approval:
            is_admin: '{admin} は管理者です。承認は必要ありません。'
            is_approved: |-
                {param1} は <b>{param2}</b> で承認されたユーザーです
                ブラックリスト、ロック、アンチスパムから保護されています！

                <b>承認者:</b> {param3} (<code>{number}</code>)
                <b>承認時刻:</b> {param4} UTC
            is_bot_itself: 私は管理者です。承認は必要ありません。
            is_unapproved: |-
                あなたは <b>{value}</b> で承認されていません
                ブラックリスト、ロック、アンチスパムから保護されていません！
        approve:
            is_bot_itself: 私を管理者にすることで既に承認していただいています！
            user_approved: |-
                承認されたユーザー: {user}
                このユーザーはban、ブラックリスト、ロック、アンチスパムから保護されています！
            user_not_in_chat: このユーザーはこのチャットにいません。どうやって承認できますか？
        approved:
            approved_list: |-
                これらのユーザーは <b>{first}</b> で承認されています:
                {second}

                承認者や承認時刻などの各ユーザーの詳細情報を取得するには、/approval (ユーザーID) を使用してください。
            none_approved: <b>{value}</b> で承認されたユーザーはいません！
        help_msg: |-
            時々、望ましくないコンテンツを送信しないユーザーを信頼することがあります。
            管理者にするほどではありませんが、ロック、ブラックリスト、アンチスパムが適用されない状態で問題を起こしている可能性があります。
            承認により、信頼できるユーザーを許可できます。

            *ユーザーコマンド:*
            × /approval: このチャットでのユーザーの承認状況を確認します。

            *管理者コマンド:*
            × /approve: ユーザーを承認します。ロック、ブラックリスト、アンチスパムはこれらに適用されません。
            × /unapprove: ユーザーの承認を取り消します。ロック、ブラックリスト、アンチスパムが再び適用されます。
            × /approved: すべての承認ユーザーをリストします。

            *所有者コマンド:*
            × /unapproveall: チャット内のすべてのユーザーの承認を取り消します。これは元に戻せません。
        unapprove:
            is_bot_itself: 私は管理者です。承認を取り消すことはできません！
            user_unapproved: |-
                承認取り消しユーザー: {user}
                このユーザーはもうban、ブラックリスト、ロック、アンチスパムから保護されません！
        unapprove_all:
            ask: このチャットからすべての承認ユーザーを削除してもよろしいですか？
            button_handler:
                "no": このチャットからすべての承認ユーザーの削除をキャンセルしました ❌
                "yes": このチャットからすべての承認ユーザーを削除しました ✅
            chat_creator_only: このコマンドを使用してチャット内のすべてのユーザーの承認を取り消すことができるのは、チャット作成者のみです。
    Bans:
        ban:
            ban_reason: |4-
                <b>理由: </b> {reason}
            dban:
                no_reply: 削除するにはメッセージに返信する必要があります！
            is_admin: なぜ管理者を禁止しますか？それはかなり愚かなアイデアのように聞こえます。
            is_bot_itself: 本当に私を禁止しないですか？
            normal_ban: |-
                もう一人は塵になりました...！
                {value} を禁止しました。
            tban: |-
                もう一人は塵になりました...！
                {first} を {second} で禁止しました
        help_msg: |-
            時々、ユーザーが迷惑をかけ、チャットから削除したい場合があります。このモジュールはそのような場合に役立ちます！
            チャットからユーザーをban/kickし、後で行動が改まれば解除することができます。

            *ユーザーコマンド:*
            × /kickme: コマンドを発行したユーザーをキックします。

            *Banコマンド* (管理者のみ):
            × /ban <userhandle>: ユーザーを禁止します。（ハンドル、または返信による）
            × /sban <userhandle>: ユーザーをサイレント禁止し、グループにメッセージを送信せず、コマンドも削除します。（ハンドルまたは返信による）
            × /dban <userhandle>: ユーザーを禁止し、返信されたメッセージを削除します。（ハンドルまたは返信による）
            × /tban <userhandle> x(m/h/d): ユーザーを「x」時間禁止します。（ハンドルまたは返信による）m = 分、h = 時間、d = 日。
            × /unban <userhandle>: ユーザーの禁止を解除します。（ハンドルまたは返信による）

            *制限コマンド:* (管理者のみ)
            × /restrict: キック、禁止、ミュートのオプションを選択するインラインキーボードを表示します。
            × /unrestrict: ミュート解除と禁止解除のオプションを選択するインラインキーボードを表示します。
        kick:
            cannot_kick_admin: なぜ管理者をキックしますか？それはかなり愚かなアイデアのように聞こえます。
            is_bot_itself: なぜ自分をキックしますか？
            kicked_reason: |4-
                <b>理由: </b> {reason}
            kicked_user: |-
                もう一人は塵になりました...！
                {user} をキックしました。
            user_not_in_chat: このユーザーはこのチャットにいません。どうやってキックできますか？
        kickme:
            is_admin: あなたは管理者です。あなたはここにいる他の人と一緒になってしまいました！
            ok_out: わかりました、出て行ってください！
        unban:
            is_admin: なぜ管理者を解除禁止しますか？それはかなり愚かなアイデアのように聞こえます。
            is_bot_itself: なぜ私を解除禁止しないのですか？すでにここにいるのに！
            unbanned_user: |-
                はい、わかりました...！
                {user} を解除禁止しました。
    Blacklists:
        bl_watcher:
            banned_user: ブラックリスト単語 {second} により {user} を禁止しました
            kicked_user: ブラックリスト単語 {second} により {first} をキックしました
            muted_user: ブラックリスト単語 {second} により {user} をミュートしました
        blacklist:
            added_bl: ブラックリストに追加された単語：
            already_blacklisted: これらの単語は既にブラックリストに登録されています：
            give_bl_word: ブラックリストに追加する単語を教えてください！
        help_msg: |-
            *ユーザーコマンド:*
            × /blacklists: このチャット内のすべてのブラックリストを確認します。

            *管理者コマンド:*
            × /addblacklist `<trigger>`: 現在のチャットで単語をブラックリストに追加します。
            × /rmblacklist `<trigger>`: 現在のチャットのブラックリストから単語を削除します。
            × /blaction `<mute/kick/ban/warn/none>`: ブラックリスト単語が検出されたときにボットが実行するアクションを設定します。
            × /blacklistaction: 上記と同じ

            *所有者のみ:*
            × /remallbl: チャットからすべてのブラックリスト単語を削除します

            *注意:*
            ブラックリストのデフォルトモードは *none* です。これによりチャットからメッセージが削除されるだけです。
        ls_bl:
            list_bl: このチャットに登録された単語：
            no_blacklisted: このチャットにはブラックリストに登録された単語はありません。
        rm_all_bl:
            ask: このチャットからすべてのブラックリストに登録された単語を削除してもよろしいですか？
            button_handler:
                "no": このチャットからすべてのブラックリストの削除をキャンセルしました ❌
                "yes": このチャットからすべてのブラックリストを削除しました ✅
        set_bl_action:
            changed_mode: 'ブラックリストモードを *{value}* に変更しました'
            choose_correct_option: 適切なオプションを選択してください <mute/kick/ban/warn/none>
            current_mode: '現在のブラックリストモードは: {value}'
        unblacklist:
            give_bl_word: ブラックリストから削除する単語を教えてください！
            no_removed_bl: 与えられた単語のいずれもブラックリストに含まれていないため削除できません！
            removed_bl: '''{value}'' をブラックリストに登録された単語から削除しました！'
    CommonStrings:
        admin_cache:
            cache_reloaded: 管理者キャッシュを正常に再読み込みしました。
            not_found: 管理者キャッシュが見つかりません。管理者に /admincache を使用して管理者キャッシュを再読み込みするよう依頼してください。
    Connections:
        allow_connect:
            currently_off: |-
                ユーザー接続は現在<b>オフ</b>になっています。
                ユーザーはこのチャットをプライベートメッセージに接続できません！
            currently_on: |-
                ユーザー接続は現在<b>オン</b>になっています。
                ユーザーはこのチャットをプライベートメッセージに接続できます！
            turned_off: |-
                このチャットへのユーザー接続を<b>オフ</b>にしました！
                ユーザーはチャットをプライベートメッセージに接続できません！
            turned_on: |-
                このチャットへのユーザー接続を<b>オン</b>にしました！
                ユーザーはチャットをプライベートメッセージに接続できます！
        connect:
            connected: <b>{value}</b> に接続しました！
            connection_disabled: |-
                このチャットへのユーザー接続は現在<b>無効</b>になっています。
                接続したい場合は管理者に許可を求めてください！
            tap_btn_connect: このチャットをプライベートメッセージに接続するには、下のボタンを押してください。
        connected: 現在 <b>{value}</b> に接続されています
        connections_btns:
            admin_conn_cmds: 利用可能な管理者コマンド：{admin}
            user_conn_cmds: 利用可能なユーザーコマンド：{user}
        disconnect:
            disconnected: 接続されたチャットから切断しました。
            need_pm: チャットから切断するには、プライベートメッセージで私にこれを送信する必要があります！
        help_msg: |-
            これにより、チャットのデータベースに接続し、チャットに知られることなくアイテムを追加できます！明らかな理由で、アイテムを追加するには管理者である必要がありますが、メンバーはデータを表示できます。（禁止/キックされたユーザーはできません！）

            *コマンド：*
            × /connect `<chatid>`: 指定されたチャットに接続し、コンテンツを表示/編集できるようにします。
            × /disconnect: 現在のチャットから切断します。
            × /reconnect: 以前接続したチャットに再接続します。
            × /connection: 現在接続されているチャットの情報を表示します。

            *管理者コマンド：*
            × /allowconnect <yes/no>: ユーザーのチャット接続を許可するかどうか。

            チャットで /id コマンドを使用してチャットIDを取得できます。IDが負の数でも驚かないでください；すべてのスーパーグループは負のIDを持っています。
        is_user_connected:
            bot_not_admin: 私はこのチャットの管理者ではありません！
            need_group: このコマンドはグループチャットで使用するもので、プライベートメッセージでは使用できません！
            user_not_admin: これを行うには管理者である必要があります。
        not_connected: どのチャットにも接続されていません。
        reconnect:
            need_pm: チャットに再接続するには、私とプライベートメッセージでやり取りする必要があります！
            no_last_chat: 再接続する最後のチャットがありません！
            reconnected: <b>{value}</b> に再接続しました！
    Disabling:
        help_msg: |-
            このモジュールにより、一般的によく使われるコマンドを無効にすることができます。そうすることで、誰もそれらを使用できなくなります。また、それらを自動削除して、ユーザーがブルーテキストを送信するのを防ぐこともできます。

            *管理者コマンド*:
            × /disable `<commandname>`: このグループでユーザーがコマンド名を使用することを停止します。
            × /enable `<item name>`: このグループでユーザーがコマンド名を使用できるようにします。
            × /disableable: すべての無効化可能なコマンドをリストします。
            × /disabledel `<yes/no/on/off>`: 非管理者によって使用された場合、無効化されたコマンドを削除します。
            × /disabled: このチャットで無効化されたコマンドをリストします。

            注:
            コマンドを無効にすると、そのコマンドは非管理者に対してのみ無効になります。すべての管理者は引き続きそれらのコマンドを使用できます。
            無効化されたコマンドは /connect 機能を通じて引き続きアクセス可能です。この機能も無効にすることに興味がある場合は、サポートチャットでお知らせください。
    Filters:
        help_msg: |-
            フィルターは大文字小文字を区別しません；誰かがトリガーワードを言うたびに、Alitaが何か別のことを返信します！これを使用して、必要に応じて独自のコマンドを作成することもできます。

            コマンド:
            - /filter <trigger> <reply>: 誰かがトリガーを言うたびに、ボットが文章で応答します。複数単語フィルターの場合は、トリガーを引用符で囲んでください。
            - /filters: すべてのチャットフィルターをリストします。
            - /stop <trigger>: ボットがトリガーに応答するのを停止します。
            - /stopall: 現在のチャットのすべてのフィルターを停止します。これは元に戻せません。

            例:
            - フィルターを設定:
            -> /filter hello Hello there! How are you?
            - 複数単語フィルターを設定:
            -> /filter "hello friend" Hello back! Long time no see!
            - 管理者のみが使用できるフィルターを設定:
            -> /filter example This filter won't happen if a normal user says it {admin}
            - ファイル、画像、gif、またはその他の添付ファイルを保存するには、
            -> /filter trigger でファイルに返信するだけです。
    Formatting:
        Fillings: |-
            <b>フィリング</b>

            コンテキストデータを使用してメッセージの内容をカスタマイズすることもできます。例えば、ウェルカムメッセージでユーザーを名前で言及したり、フィルターで言及したりできます！
            これらをノートでユーザーを言及するためにも使用できます！

            <b>サポートされているフィリング:</b>
            - <code>{first}</code>: ユーザーの名前。
            - <code>{last}</code>: ユーザーの姓。
            - <code>{fullname}</code>: ユーザーのフルネーム。
            - <code>{username}</code>: ユーザーのユーザー名。ない場合はユーザーを言及します。
            - <code>{mention}</code>: ユーザーを名前で言及します。
            - <code>{id}</code>: ユーザーのID。
            - <code>{chatname}</code>: チャットの名前。
            - <code>{rules}</code>: メッセージにルールボタンを追加します。
            - <code>{protect}</code>: コンテンツを共有から保護します。
            - <code>{preview}</code>: メッセージでプレビューを有効にします。
            - <code>{nonotif}</code>: そのメッセージの通知を無効にします。
        Markdown: |-
            <b>マークダウンフォーマット</b>

            <b>太字</b>、<i>斜体</i>、<u>下線</u>などを使用してメッセージをフォーマットできます。試してみてください！
            <b>サポートされているマークダウン</b>:
            - <code>`code words`</code>: バッククォートは等幅フォントに使用されます。表示: <code>code words</code>。
            - <code>_italic words_</code>: アンダースコアは斜体フォントに使用されます。表示: <i>italic words</i>。
            - <code>*bold words*</code>: アスタリスクは太字フォントに使用されます。表示: <b>bold words</b>。
            - <code>~strikethrough~</code>: チルダは取り消し線に使用されます。表示: <strike>strikethrough</strike>。
            - <code>||spoiler||</code>: 二重縦棒はスポイラーに使用されます。表示: <tg-spoiler>Spoiler</tg-spoiler>。
            - <code>```pre```</code>: フォーマッターが「```」でフォーマットされたテキスト内の他のフォーマット文字を無視するようにします: <code>**bold** | *bold*</code>。
            - <code>__underline__</code>: 二重アンダースコアは下線に使用されます。表示: underline。注意: 一部のクライアントは賢く動作しようとして斜体として解釈します。その場合は、アプリの組み込みフォーマットを使用してください。
            - <code>[hyperlink](example.com)</code>: これはハイパーリンクに使用されるフォーマットです。表示: <a href='https://example.com/'>hyperlink</a>。
            - <code>[My Button](buttonurl://example.com)</code>: これはボタン作成に使用されるフォーマットです。この例では、クリックすると<code>example.com</code>を開く「My button」という名前のボタンが作成されます。

            同じ行にボタンを送信したい場合は、<code>:same</code>フォーマットを使用してください。
            <b>例:</b>
            <code>[button 1](buttonurl:example.com)</code>
            <code>[button 2](buttonurl://example.com:same)</code>
            <code>[button 3](buttonurl://example.com)</code>
            これによりボタン1と2が同じ行に表示され、3がその下に表示されます。
        Random: |-
            <b>ランダムコンテンツ</b>

            もう一つの楽しいことは、メッセージの内容をランダム化することです。ウェルカムメッセージを変更したり、ノートを変更したりして、少し個人的にしましょう！
            ランダムコンテンツの使用方法:
            - %%%: この区切り文字を使用してボットにランダムな返信を追加できます。
            例:
            <code>hello
            %%%
            how are you</code>
            これにより、最初のメッセージ「hello」または2番目のメッセージ「how are you」をランダムに選択して送信します。
            これを使用してAlitaをもう少しカスタマイズしましょう！（フィルター/ノートでのみ動作）
            ウェルカムメッセージの例:
            - 新しいユーザーが参加するたびに、ここに示された3つのメッセージのうちの1つが表示されます。
            -> /filter "hey"
            hello there <code>{first}</code>!
            %%%
            Ooooh, <code>{first}</code> how are you?
            %%%
            Sup? <code>{first}</code>
        help_msg: Alitaは、メッセージをより表現力豊かにするために、多数のフォーマットオプションをサポートしています。下のボタンをクリックして確認してください。
    Greetings:
        help_msg: |-
            グループへの新しいメンバーを歓迎したり、退出後に「お別れ」を言ったりしましょう！

            *管理者コマンド:*
            × /setwelcome `<reply/text>`: グループのウェルカムテキストを設定します。
            × /welcome `<yes/no/on/off>`: グループのウェルカム設定を有効または無効にします。
            × /resetwelcome: ウェルカムメッセージをデフォルトにリセットします。
            × /setgoodbye `<reply/text>`: グループのお別れテキストを設定します。
            × /goodbye `<yes/no/on/off>`: グループのお別れ設定を有効または無効にします。
            × /resetgoodbye: お別れメッセージをデフォルトにリセットします。
            × /cleanservice `<yes/no/on/off>`: 'xがグループに参加しました'などのすべてのサービスメッセージを削除します。
            × /cleanwelcome `<yes/no/on/off>`: 新しいメンバーが参加するたびに、古いウェルカムメッセージを削除します。
            × /autoapprove `<yes/no/on/off>`: すべての新しいメンバーを自動的に承認します。
    Help:
        About: |-
            @{first} は、最も速く、最も機能豊富なグループマネージャーの一つです。

            Alita ✨ は @DivideProjects によって作られました！

            Alitaは2020年からオンラインになっており、何千ものユーザーにサービスを提供しています！

            <b>なぜAlitaを選ぶのか:</b>
            - シンプル: 多くのボットコマンドを使用する簡単な使い方で、数千のユーザーにサービスを提供してきました。
            - 豊富な機能: 他のグループ管理ボットが持っていない多くの機能があります。
            - 高速: なぜでしょうか？Pythonを使わず、<a href='https://go.dev/'>Go</a>をコアプログラミング言語として使用しているからです。

            <b>現在のバージョン:</b> {admin}
        Configuration:
            Step-1: |-
                Alita設定へようこそ

                まず、Alita ✨ をグループに追加することです。これを行うには、下のボタンを押してグループを選択し、「完了」を押してチュートリアルを続行してください。
            Step-2: |-
                よくできました！

                私が正しく動作するように、あなたのグループの管理者にする必要があります！
                そのために、以下の簡単な手順に従ってください:
                ▫️ あなたのグループに移動
                ▫️ グループ名を押す
                ▫️ 編集を押す
                ▫️ 管理者を押す
                ▫️ 管理者を追加を押す
                ▫️ 虫眼鏡を押す
                ▫️ @{chat} を検索
                ▫️ 確認
            Step-3: |-
                素晴らしい！
                これでボットは準備完了です！
                すべてのコマンドを / または ! で使用できます。

                グループ内での設定に問題がある場合は、@DivideSupportにお気軽にお問い合わせください。
                喜んでお手伝いします。
        DonateText: |-
            寄付したいですか？素晴らしい！
            あなたが寄付すると、すべての資金は迅速で応答性の高い開発に向かいます。
            あなたの寄付により、サーバーの制限により取得できなかった新機能や2つの機能が取得される場合があります。
            すべての資金は、データベース、ストレージ、ホスティングなどのサービスに投入されます！
            所有者に連絡するには: @DivideProjectsBot
    Languages:
        help_msg: |-
            ボットの言語を変更したいですか？
            このモジュールで可能です！

            /langと入力するだけで、インラインキーボードを使用してユーザー自身またはグループの言語を選択することができます。

            [Crowdin](https://crowdin.com/project/alita_robot)を使用して、ボットをより多くの言語に翻訳するのを手伝うことができます。
    Locks:
        help_msg: |-
            *管理者のみ*:
            × /lock `<permission>`: チャット権限をロックします。
            × /unlock `<permission>`: チャット権限をアンロックします。
            × /locks: チャット権限を表示します。
            × /locktypes: 使用可能なロックタイプを確認します！

            ロックを使用して、グループのユーザーを制限することができます。
            URLをロックすると、URLを含むすべてのメッセージが自動的に削除され、ステッカーをロックするとすべてのステッカーが削除されます。
            ボットをロックすると、非管理者がボットをチャットに追加することを防ぎます。

            **例:**
            `/lock media`: これによりチャット内のすべてのメディアメッセージがロックされます。
    Misc:
        help_msg: |-
            × /info: ユーザー情報を取得します。返信として使用するか、ユーザーIDまたはユーザー名を渡すことができます。
            × /id: 現在のグループIDを取得します。メッセージに返信して使用すると、そのユーザーのIDを取得します。
            × /ping: Telegramサーバーにping！
            × /tr <言語コード> <メッセージ/メッセージに返信>: メッセージを翻訳します。
            × /removebotkeyboard: チャットから動かなくなったボットキーボードを削除します。
            × /stat: チャット内のメッセージの総数を取得します。
    Mutes:
        help_msg: |-
            時々、ユーザーが迷惑をかけ、チャットへのメッセージ送信を制限したい場合があります。このモジュールはそのような場合に役立ちます。このモジュールを使用してグループ内のメンバーをミュートできます。

            *ミュートコマンド:* (管理者のみ)
            × /mute <userhandle>: ユーザーをミュートします（ハンドル、または返信による）
            × /smute <userhandle>: ユーザーをサイレントミュートし、グループにメッセージを送信せず、コマンドも削除しません。（ハンドル、または返信による）
            × /dmute <userhandle>: ユーザーをミュートし、返信されたメッセージを削除します。（ハンドルまたは返信による）
            × /tmute <userhandle> x(m/h/d): ユーザーを「x」時間ミュートします。（ハンドルまたは返信による）m = 分、h = 時間、d = 日。
            × /unmute <userhandle>: ユーザーのミュートを解除します。（ハンドル、または返信による）
    Notes:
        help_msg: |-
            将来のユーザーのためにノートでデータを保存しましょう！
            ノートは情報のランダムな断片を保存するのに最適です；電話番号、素敵なgif、面白い画像 - 何でも！
            *ユーザーコマンド:*
            - /get <notename>: ノートを取得します。
            - #notename: /getと同じ。
            管理者コマンド:
            - /save <notename> <note text>: 「word」という名前の新しいノートを保存します。メッセージに返信すると、そのメッセージが保存されます。メディアでも動作します！
            - /clear <notename>: 関連するノートを削除します。
            - /notes: 現在のチャット内のすべてのノートをリストします。
            - /saved: /notesと同じ。
            - /clearall: チャット内のすべてのノートを削除します。これは元に戻せません。
            - /privatenotes: ノートをプライベートメッセージで送信するかどうか。ユーザーがクリックするとプライベートメッセージでノートを取得するためのボタン付きメッセージが送信されます。
    Pins:
        help_msg: |-
            ピン関連のすべてのコマンドをここで見つけることができます；簡単なピンメッセージでチャットを最新ニュースで更新し続けましょう！

            *ユーザーコマンド:*
            × /pinned: 現在のピン留めされたメッセージを取得します。

            *管理者コマンド:*
            × /pin: 返信したメッセージをピンします。グループメンバーに通知を送信するには、'loud'または'notify'を追加してください。
            × /pinned: 現在のチャットで最新のピン留めされたメッセージを取得します。
            × /permapin <text>: ボットを通じてカスタムメッセージをピンします。このメッセージには、マークダウン、ボタン、その他すべてのクールな機能を含めることができます。
            × /unpin: 現在のピンメッセージをアンピンします。返信として使用する場合は、返信されたメッセージをアンピンします。
            × /unpinall: すべてのピンメッセージをアンピンします。
            × /antichannelpin <yes/no/on/off>: Telegramの自動ピンでリンクされたチャンネルを使用しません。引数が指定されていない場合は、現在の設定を表示します。
            × /cleanlinked <yes/no/on/off>: リンクされたチャンネルによって送信されたメッセージを削除します。
            注: アンチチャンネルピンを使用する場合は、手動で行うのではなく、/unpinコマンドを使用するようにしてください。そうしないと、チャンネルがメッセージを送信したときに古いメッセージが再びピンされます。
    Purges:
        help_msg: |-
            *管理者のみ:*
            - /purge: このメッセージと返信されたメッセージの間のすべてのメッセージを削除します。
            - /del: 返信したメッセージを削除します。

            *例*:
            - 返信されたメッセージから現在まですべてのメッセージを削除します。
            -> `/purge`
    Reports:
        help_msg: |-
            私たちは皆忙しく、24時間グループを監視する時間がありません。しかし、グループの誰かがスパムをしている場合、どう対応しますか？

            × /report `<reason>`: 管理者に報告するためのメッセージに返信します。
            - @admin: /reportと同じですが、コマンドではありません。

            *管理者のみ:*
            × /reports `<on/off/yes/no>`: レポート設定を変更するか、現在のステータスを表示します。
            - プライベートメッセージで実行すると、あなたのステータスを切り替えます。
            - グループ内で実行すると、そのグループのステータスを切り替えます。
            × /reports `block` (返信のみ): ユーザーが/reportや@adminを使用することをブロックします。
            × /reports `unblock` (返信のみ): ユーザーの/reportや@admin使用ブロックを解除します。
            × /reports `showblocklist`: /reportや@adminを使用できないすべてのブロックされたユーザーを確認します。

            ユーザーを報告するには、@adminまたは/reportでそのメッセージに返信してください；管理者に通知されたことを知らせるメッセージでAlitaが返信します。
            ユーザーを報告するにはメッセージに返信する必要があります；理由もなく@adminをタグ付けすることはできません！

            *注意:* 管理者が使用した場合、これらはいずれもトリガーされません。
    Rules:
        help_msg: |-
            すべてのチャットは異なるルールで動作します；このモジュールはそれらのルールを明確にするのに役立ちます！
            *ユーザーコマンド*:
            × /rules: 現在のチャットルールを確認します。
            *管理者コマンド*:
            × /setrules `<text>`: このチャットのルールを設定します。
            × /privaterules `<yes/no/on/off>`: ルールをプライベートで送信するかどうかを有効/無効にします。
            × /resetrules: チャットルールをデフォルトにリセットします
            × /rulesbtn `<custom text>`: ルールボタンのテキストを設定します。
            × /resetrulesbutton: ルールボタンのテキストをデフォルトにリセットします。
            × /resetrulesbtn: 上記と同じ。
    Tagger:
        help_msg: |-
            タガーはグループ内のすべての登録メンバーを言及するための重要な機能です。
            すべてのチャットメンバーがタガーに登録できます。

            *ユーザーコマンド:*
            × /tagme: ユーザーをタグ付け可能にします
            × /untagme: ユーザーのタグ付けを無効にします

            *管理者コマンド:*
            × /tagall: すべてのタグ付けされたユーザーをタグ/言及します
            × /untagall: すべてのタグ付けされたメンバーをクリアします
            × /addtag <ユーザー>: ユーザーを手動でタグリストに追加します
            × /rmtag <ユーザー>: ユーザーを手動でタグリストから削除します
    Utils:
        chat_status:
            anon_admin_btn: 身元を確認してください
            anon_admin_string: あなたは匿名であるように見えます。このボタンをタップして身元を確認してください。
            bot:
                no_permission_delete: メッセージを削除する権限がありません！
                no_permission_pin: ここでメッセージをピンできません！私が管理者であり、メッセージをピンできることを確認してください。
                no_permission_promote: ここでは人を昇進/降格できません！私が管理者であり、新しい管理者を任命できることを確認してください。
                no_permission_restrict: メンバーを制限する権限がありません！
                no_permission_restrict_group: ここの人を制限できません！私が管理者であり、他のメンバーを制限できることを確認してください。
                require_admin: 私は管理者ではありません！私が管理者であり、適切な権限を持っていることを確認してください。
            require_group: このコマンドはグループチャットで使用するもので、プライベートメッセージでは使用できません！
            require_private: このコマンドはプライベートメッセージ用で、グループチャットでは使用できません！
            user:
                no_permission_change_info_btn: 情報を変更する権限がありません！！
                no_permission_change_info_cmd: このグループの情報を変更する権限がありません！
                no_permission_delete: メッセージを削除する権限がありません！
                no_permission_pin: ここでメッセージをピンできません！管理者であり、メッセージをピンできるようにしてください。
                no_permission_promote_btn: メンバーを昇進/降格する権限がありません！！
                no_permission_promote_cmd: ここでは人を昇進/降格できません！適切な権限があることを確認してください。
                no_permission_restrict_btn: メンバーを制限する権限がありません！
                no_permission_restrict_cmd: このグループのメンバーを制限する権限がありません！
                require_admin_btn: これを行うには管理者である必要があります！
                require_admin_cmd: このコマンドを実行できるのは管理者のみです！
                require_owner_btn: これを行うにはグループ作成者である必要があります！
                require_owner_cmd: これを行うのはグループ作成者のみです！
        extraction:
            extract_chat:
                badrequest_failed_getchat: 'チャットへの接続に失敗しました: チャットを取得できませんでした: getChatできません: Bad Request: チャットが見つかりません'
                fail_need_chat: 接続するチャットIDが必要です！
                fail_need_chat_id: チャットIDが期待されていましたが、これは有効な整数ではありません。
            extract_user:
                badrequest_failed_getchatmember: 'ユーザーの取得に失敗しました: getChatMember: Bad Request: チャットが見つかりません'
                no_user_found: この名前でユーザーを見つけることができませんでした。以前にそのユーザーを見たことがありますか？
        string_handling:
            extract_time:
                invalid_time_amount: 無効な時間の指定です。
                invalid_time_type: '無効な時間タイプが指定されました。m、h、またはdが期待されましたが、{time}が指定されました'
    Warns:
        help_msg: |-
            警告でメンバーをチェックし、手に負えなくなるのを防ぎましょう！
            自動警告をお探しの場合は、ブラックリストモジュールについてお読みください！

            *管理者コマンド:*
            - /warn <理由>: ユーザーに警告します。
            - /dwarn <理由>: 返信でユーザーに警告し、そのメッセージを削除します。
            - /swarn <理由>: ユーザーに静かに警告し、あなたのメッセージを削除します。
            - /warns: ユーザーの警告を確認します。
            - /rmwarn: ユーザーの最新の警告を削除します。
            - /resetwarn: ユーザーのすべての警告を0にリセットします。
            - /resetallwarns: チャット内のすべての警告を削除します。すべてのユーザーが0警告に戻ります。
            - /warnings: チャットの警告設定を取得します。
            - /setwarnmode <ban/kick/mute>: チャットの警告モードを設定します。
            - /setwarnlimit <数値>: ユーザーが処罰される前の警告数を設定します。

            *例*
            - ユーザーに警告する。
            -> `/warn @user ルールに従わなかったため`
